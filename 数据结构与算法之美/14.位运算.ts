// 与运算 两个二进制位都为 1 → 结果才是 1
console.log(5 & 3);
// 5: 101（二进制）
// 3: 011
// 结果: 001 → 1


// 或运算 只要有一个是 1 → 结果就是 1。
console.log(5 | 3);
// 101 | 011 = 111 → 7


// 异或运算 相同为 0，不同为 1。
console.log(5 ^ 3);
// 101 ^ 011 = 110 → 6


// 非运算 按位取反（0→1，1→0） 
// JS/TS 用 32 位有符号整数表示，结果是 -(n+1)
console.log(~5);
// 5 的二进制: 000...0101
// 取反: 111...1010 → -6


// 左移 向左移动 n 位，右边补 0
console.log(5 << 1);
// 5: 101 → 1010 → 10

// 算术右移 >> 向右移动 n 位，左边补符号位（保持正负号)
console.log(5 >> 1);  // 5: 101 → 10 → 2
console.log(-5 >> 1); // 保持符号位 → -3




